{"version":3,"sources":["Components/Movie/Movie.js","Components/Loader/Loader.js","Components/SearchForm/SearchForm.js","apiCalls.js","Components/Movies/Movies.js","Components/MovieDetails/MovieDetails.js","Components/FilteredMovies/FilteredMovies.js","Components/Header/Header.js","Components/Error/Error.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["Movie","id","poster","title","to","className","src","alt","Loader","SearchForm","props","handleChange","event","setState","target","value","sendRequest","preventDefault","searchMovie","state","clearInputs","type","placeholder","name","this","onChange","Component","getMovieData","a","fetch","response","ok","status","Error","json","data","console","log","message","getMovieInfo","getMovieTrailer","Movies","componentDidMount","then","movies","catch","err","error","renderAllMovies","movieCards","map","movie","splitDate","release_date","split","newDate","poster_path","background","backdrop_path","avgRating","average_rating","toFixed","releaseDate","movieInfo","video","filteredMovies","length","MovieDetails","movieTrailers","movieError","videoError","videos","find","date","number","toString","replace","genres","budget","revenue","tagline","runtime","allGenres","genre","videoLink","key","backDrop","style","backgroundImage","toUpperCase","display","formatDate","convertNumber","width","height","frameBorder","allowFullScreen","href","FilteredMovies","renderFilteredMovies","searchedMovies","searchedMov","filter","toLowerCase","includes","Header","App","exact","path","render","match","params","parseInt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"ybAuBeA,EAlBD,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,MACxB,OACG,cAAC,IAAD,CAAMC,GAAE,iBAAYH,GAApB,SACK,qBAAKI,UAAU,aAAf,SACI,qBAAKA,UAAU,eAAeC,IAAKJ,EAAQK,IAAK,mBAAqBJ,SCAtEK,G,MANA,WACX,OACI,oBAAIH,UAAU,UAAd,sCCuCSI,G,wDAvCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,aAAe,SAAAC,GACX,EAAKC,SAAS,CAAEV,MAAOS,EAAME,OAAOC,SARrB,EAWnBC,YAAc,SAAAJ,GACVA,EAAMK,iBACN,EAAKP,MAAMQ,YAAY,EAAKC,MAAMhB,OAClC,EAAKiB,eAdU,EAiBnBA,YAAc,WACV,EAAKP,SAAS,CAAEV,MAAO,MAhBzB,EAAKgB,MAAQ,CACXhB,MAAO,IAHQ,E,0CAqBnB,WAAU,IAAD,OACP,OACE,iCACE,uBACEkB,KAAK,OACLC,YAAY,qBACZC,KAAK,QACLR,MAAOS,KAAKL,MAAMhB,MAClBsB,SAAU,SAAAb,GAAK,OAAI,EAAKD,aAAaC,MAEvC,cAAC,IAAD,CAAMR,GAAE,kBAAaoB,KAAKL,MAAMhB,OAAhC,SACE,qD,GAjCauB,c,yBCJnBC,EAAY,uCAAG,8BAAAC,EAAA,+EAEMC,MAAM,0DAFZ,WAEXC,EAFW,QAGHC,IAA0B,MAApBD,EAASE,OAHZ,sBAITC,MAAM,yBAJG,uBAMEH,EAASI,OANX,cAMXC,EANW,yBAOVA,GAPU,yCASjBC,QAAQC,IAAI,KAAIC,SATC,kFAAH,qDAcZC,EAAY,uCAAG,WAAOtC,GAAP,iBAAA2B,EAAA,+EAEMC,MAAM,yDAAD,OAA0D5B,IAFrE,WAEX6B,EAFW,QAGHC,IAA0B,MAApBD,EAASE,OAHZ,sBAITC,MAAM,wBAJG,uBAMEH,EAASI,OANX,cAMXC,EANW,yBAOVA,GAPU,yCASjBC,QAAQC,IAAI,KAAIC,SATC,kFAAH,sDAcZE,EAAe,uCAAG,WAAOvC,GAAP,eAAA2B,EAAA,sEACCC,MAAM,yDAAD,OAA0D5B,EAA1D,YADN,WAChB6B,EADgB,QAERC,IAA0B,MAApBD,EAASE,OAFP,sBAGdC,MAAM,yBAHQ,uBAKTH,EAASI,OALA,mFAAH,sDCoDJO,G,wDArEf,aAAe,IAAD,8BACZ,gBAUFC,kBAAoB,WAClBf,IACCgB,MAAK,SAAAR,GAAI,OAAI,EAAKtB,SAAS,CAAE+B,OAAQT,EAAKS,YAC1CC,OAAM,SAAAC,GAAG,OAAI,EAAKjC,SAAS,CAACkC,MAAOD,QAdxB,EAiBdE,gBAAkB,WAChB,IAAOC,EAAa,EAAK9B,MAAMyB,OAAOM,KAAI,SAAAC,GACxC,IAAMC,EAAYD,EAAME,aAAaC,MAAM,KACrCC,EAAUH,EAAU,GAAK,IAAMA,EAAU,GAAK,IAAMA,EAAU,GAClE,OACI,cAAC,EAAD,CACIlD,OAAQiD,EAAMK,YACdC,WAAYN,EAAMO,cAClBvD,MAAOgD,EAAMhD,MACbwD,UAAWR,EAAMS,eAAeC,QAAQ,GACxCC,YAAaP,EACbtD,GAAIkD,EAAMlD,IACLkD,EAAMlD,OAIvB,OACI,qBAAKI,UAAU,mBAAf,SACG4C,KAjCP,EAAK9B,MAAQ,CACXyB,OAAQ,GACRmB,UAAW,KACXC,MAAO,KACPC,eAAgB,GAChBlB,MAAO,IAPG,E,0CAwCd,WACE,OACE,0BAAS1C,UAAU,iBAAnB,UACE,cAAC,EAAD,KACEmB,KAAKL,MAAMyB,OAAOsB,QAAU1C,KAAKL,MAAM4B,OAAS,6CAChDvB,KAAKL,MAAMyB,OAAOsB,SAAW1C,KAAKL,MAAM4B,OAAS,cAAC,EAAD,KACjDvB,KAAKL,MAAM4B,OAASvB,KAAKL,MAAMyB,OAAOsB,QACtC,kCACG1C,KAAKwB,2B,GAlDGtB,cC4ENyC,G,wDA9EX,WAAYzD,GAAQ,IAAD,8BACjB,cAAMA,IACDS,MAAQ,CACT4C,UAAW,GACXK,cAAe,GACfC,WAAY,GACZC,WAAY,IANC,E,qDAUrB,WAAqB,IAAD,OACVrE,EAAOuB,KAAKd,MAAZT,GAERsC,EAAatC,GACR0C,MAAK,SAAAQ,GAAK,OAAI,EAAKtC,SAAS,CAAEkD,UAAWZ,EAAMA,WAC/CN,OAAM,kBAAM,EAAKhC,SAAS,CAAEwD,WAAY,8EAE7C7B,EAAgBvC,GACX0C,MAAK,SAAAqB,GAAU,EAAKnD,SAAS,CAAEuD,cAAeJ,EAAMO,OAAOC,MAAK,SAAAR,GAAK,MAAmB,YAAfA,EAAM3C,aAC/EwB,OAAM,kBAAM,EAAKhC,SAAS,CAAEyD,WAAY,qD,wBAG/C,SAAWG,GACT,IAAMrB,EAAYqB,EAAKnB,MAAM,KAE7B,OADgBF,EAAU,GAAK,IAAMA,EAAU,GAAK,IAAMA,EAAU,K,2BAItE,SAAcsB,GACb,OAAOA,EAAOC,WAAWC,QAAQ,wBAAyB,O,oBAG3D,WACE,MACuDpD,KAAKL,MAAM4C,UAD3D5D,EAAP,EAAOA,MAAOkD,EAAd,EAAcA,aAAcK,EAA5B,EAA4BA,cAAemB,EAA3C,EAA2CA,OACzCC,EADF,EACEA,OAAQC,EADV,EACUA,QAASC,EADnB,EACmBA,QAASpB,EAD5B,EAC4BA,eAAgBqB,EAD5C,EAC4CA,QAE5C,GAAI9E,EAAO,CACT,IAAM+E,EAAYL,EAAO3B,KAAI,SAAAiC,GAAK,OAAIA,EAAQ,OACxCC,EAAY5D,KAAKL,MAAMiD,eAAX,wCAA6D5C,KAAKL,MAAMiD,cAAciB,KAClGC,EAAW9D,KAAKL,MAAM4C,WAAX,cAA+BL,EAA/B,KACjB,OACE,yBAASrD,UAAU,gBAAgBkF,MAAO,CAAEC,gBAAiBF,GAA7D,SACE,0BAASjF,UAAU,qBAAnB,UACE,6BAAKF,EAAMsF,gBACX,oBAAIF,MAAO,CAACG,SAAUV,GAAW,QAAjC,SAA2CA,IAC3C,oBAAG3E,UAAU,UAAb,yBAAoCuD,EAAeC,QAAQ,MAC3D,oBAAGxD,UAAU,UAAb,2BAAsCmB,KAAKmE,WAAWtC,MACtD,oBAAGhD,UAAU,UAAb,oBAAgC6E,EAAUhB,OAAyBgB,EAAhB,iBACnD,oBAAG7E,UAAU,UAAb,qBAAiCyE,EAAD,WAA6BtD,KAAKoE,cAAcd,IAAtC,iBAC1C,oBAAGzE,UAAU,UAAb,sBAAkC0E,EAAD,WAA8BvD,KAAKoE,cAAcb,IAAtC,iBAC5C,oBAAG1E,UAAU,UAAb,sBAAiC4E,EAAUA,EAAU,WAAa,iBAClE,qBAAK5E,UAAU,gBAAf,SACE,wBACAkF,MAAO,CAACG,SAAUN,GAAa,QAC/BjF,MAAM,mBACNE,UAAU,QACVwF,MAAM,MACNC,OAAO,MACPxF,IAAK8E,EACLW,YAAY,IACZC,iBAAe,MAGjB,mBAAGC,KAAMb,EAAW/E,UAAU,sBAA9B,oCACA,cAAC,IAAD,CAASA,UAAU,UAAUD,GAAG,IAAhC,4BAKR,OAAO,S,GAtEgBsB,cC2EZwE,G,wDA1Eb,aAAe,IAAD,8BACZ,gBAUFxD,kBAAoB,WAClBf,IACCgB,MAAK,SAAAR,GAAI,OAAI,EAAKtB,SAAS,CAAE+B,OAAQT,EAAKS,YAC1CD,MAAK,kBAAM,EAAKzB,iBAChB2B,OAAM,SAAAC,GAAG,OAAI,EAAKjC,SAAS,CAACkC,MAAOD,QAfxB,EAkBdqD,qBAAuB,WACrB,IAAMC,EAAiB,EAAKjF,MAAM8C,eAAef,KAAI,SAAAC,GACnD,IAAMC,EAAYD,EAAME,aAAaC,MAAM,KACrCC,EAAUH,EAAU,GAAK,IAAMA,EAAU,GAAK,IAAMA,EAAU,GAClE,OACI,cAAC,EAAD,CACIlD,OAAQiD,EAAMK,YACdC,WAAYN,EAAMO,cAClBvD,MAAOgD,EAAMhD,MACbwD,UAAWR,EAAMS,eAAeC,QAAQ,GACxCC,YAAaP,EACbtD,GAAIkD,EAAMlD,IACLkD,EAAMlD,OAIvB,OACI,sBAAKI,UAAU,mBAAf,UACG+F,EACD,cAAC,IAAD,CAAS/F,UAAU,UAAUD,GAAG,IAAhC,2BArCM,EA0Cdc,YAAc,WACd,IAAMmF,EAAc,EAAKlF,MAAMyB,OAAO0D,QAAO,SAAAnD,GAAK,OAAIA,EAAMhD,MAAMoG,cAAcC,SAAS,EAAK9F,MAAMP,MAAMoG,kBAC1G,EAAK1F,SAAS,CAAEoD,eAAgBoC,KA1C9B,EAAKlF,MAAQ,CACXyB,OAAQ,GACRmB,UAAW,KACXC,MAAO,KACPC,eAAgB,GAChBlB,MAAO,IAPG,E,0CA+Cd,WACE,IAAMqD,EAAiB5E,KAAKL,MAAM8C,eAAef,KAAI,SAAAC,GACnD,IAAMC,EAAYD,EAAME,aAAaC,MAAM,KACrCC,EAAUH,EAAU,GAAK,IAAMA,EAAU,GAAK,IAAMA,EAAU,GAClE,OACI,cAAC,EAAD,CACIlD,OAAQiD,EAAMK,YACdC,WAAYN,EAAMO,cAClBvD,MAAOgD,EAAMhD,MACbwD,UAAWR,EAAMS,eAAeC,QAAQ,GACxCC,YAAaP,EACbtD,GAAIkD,EAAMlD,IACLkD,EAAMlD,OAIvB,OACE,oCACI,cAAC,IAAD,CAASI,UAAU,UAAUD,GAAG,IAAhC,uBACE,qBAAKC,UAAU,4BAAf,SACD+F,W,GApEkB1E,cCMd+E,G,MARA,WACb,OACI,wBAAQpG,UAAU,SAAlB,SACE,oECOO4B,G,MAVD,WACV,OACI,qBAAK5B,UAAU,QAAf,SACI,cAAC,IAAD,CAASA,UAAU,UAAUD,GAAG,IAAhC,SACI,qBAAKE,IAAI,kEAAkEC,IAAI,kBCkBhFmG,EAjBH,WACV,OACI,sBAAKrG,UAAU,MAAf,UACI,cAAC,EAAD,IACA,sBAAMA,UAAU,eAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsG,OAAK,EAACC,KAAK,IAAIC,OAAS,kBAAO,cAAC,EAAD,OACtC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,iBAAiBC,OAAS,gBAAGC,EAAH,EAAGA,MAAH,OAAe,cAAC,EAAD,CAAgB3G,MAAO2G,EAAMC,OAAO5G,WAC/F,cAAC,IAAD,CAAOwG,OAAK,EAACC,KAAK,WAAWC,OAAS,kBAAM,cAAC,EAAD,OAC5C,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,aAAaC,OAAQ,gBAAGC,EAAH,EAAGA,MAAH,OAAe,cAAC,EAAD,CAAc7G,GAAI+G,SAASF,EAAMC,OAAO9G,SAC9F,cAAC,IAAD,CAAO2G,KAAK,IAAIC,OAAQ,kBAAM,cAAC,EAAD,gBCP7BI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxE,MAAK,YAAkD,IAA/CyE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASZ,OAAO,eAAC,IAAD,eAAgB,cAAC,EAAD,IAAhB,OAA0Ca,SAASC,eAAe,SAKlFV,M","file":"static/js/main.bf484b75.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport './Movie.css'\n\nconst Movie = ({id, poster, title}) => {\n    return  (\n       <Link to={`/movie/${id}`}>\n            <div className=\"movie-card\">\n                <img className='movie-poster' src={poster} alt={'Cover image for ' + title}></img>\n            </div>\n        </Link>\n    )\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    poster: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    avgRating: PropTypes.string.isRequired,\n    releaseDate: PropTypes.string.isRequired,\n}\n\nexport default Movie;\n","import React from 'react';\nimport './Loader.css'\n\nconst Loader = () => {\n    return  (\n        <h2 className='loading'>Loading...üçø</h2>\n    )\n}\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport './SearchForm.css';\n\nclass SearchForm extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        title: '',\n      }\n    }\n\n    handleChange = event => {\n        this.setState({ title: event.target.value });\n    }\n\n    sendRequest = event => {\n        event.preventDefault();\n        this.props.searchMovie(this.state.title);\n        this.clearInputs();\n    }\n\n    clearInputs = () => {\n        this.setState({ title: '' });\n    }\n\n    render() {\n      return (\n        <form>\n          <input\n            type='text'\n            placeholder='Search Movie Title'\n            name='title'\n            value={this.state.title}\n            onChange={event => this.handleChange(event)}\n          />\n          <Link to={`/search/${this.state.title}`}>\n            <button>Search</button>\n          </Link>\n        </form>\n      )\n    }\n  }\n\n  export default SearchForm;\n","const getMovieData = async () => {\n  try {\n    const response = await fetch(\"https://rancid-tomatillos.herokuapp.com/api/v2/movies/\")\n    if (!response.ok || response.status === 500) {\n      throw Error('Error fetching movies')\n    }\n    const data = await response.json()\n    return data\n  } catch(err) {\n    console.log(err.message)\n    return err;\n  }\n}\n\nconst getMovieInfo = async (id) => {\n  try {\n    const response = await fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}`)\n    if (!response.ok || response.status === 500) {\n      throw Error('Error fetching movie')\n    }\n    const data = await response.json()\n    return data\n  } catch(err) {\n    console.log(err.message)\n    return err;\n  }\n}\n\nconst getMovieTrailer = async (id) => {\n  const response = await fetch(`https://rancid-tomatillos.herokuapp.com/api/v2/movies/${id}/videos`);\n  if (!response.ok || response.status === 500) {\n    throw Error('Error fetching movies');\n  }\n  return await response.json();\n}\n\nexport { getMovieData, getMovieInfo, getMovieTrailer }\n\n\n","import React, { Component } from 'react';\nimport Movie from '../Movie/Movie';\nimport Loader from '../Loader/Loader';\nimport PropTypes from 'prop-types';\nimport SearchForm from '../SearchForm/SearchForm';\nimport { getMovieData }  from '../../apiCalls';\nimport { NavLink } from 'react-router-dom';\nimport './Movies.css'\n\nclass Movies extends Component {\n  //  = (props) => {\n  constructor() {\n    super()\n    this.state = {\n      movies: [],\n      movieInfo: null,\n      video: null,\n      filteredMovies: [],\n      error: ''\n    }\n  }\n\n  componentDidMount = () => {\n    getMovieData()\n    .then(data => this.setState({ movies: data.movies }))\n    .catch(err => this.setState({error: err}))\n  }\n\n  renderAllMovies = () => {\n    const  movieCards = this.state.movies.map(movie => {\n      const splitDate = movie.release_date.split('-')\n      const newDate = splitDate[1] + '-' + splitDate[2] + '-' + splitDate[0]\n        return (\n            <Movie\n                poster={movie.poster_path}\n                background={movie.backdrop_path}\n                title={movie.title}\n                avgRating={movie.average_rating.toFixed(1)}\n                releaseDate={newDate}\n                id={movie.id}\n                key={movie.id}\n            />\n        )\n    })\n    return (\n        <div className='movies-container'>\n          {movieCards}\n        </div>\n      )\n  }\n\n  render() {\n    return (\n      <section className='movies-section'>\n        <SearchForm />\n        {!this.state.movies.length && this.state.error && <h2>500 Error!</h2>}\n        {!this.state.movies.length && !this.state.error && <Loader />}\n        {!this.state.error && this.state.movies.length &&\n          <section>\n            {this.renderAllMovies()}\n          </section>\n        }\n      </section>\n    )\n  }\n  // Same as:\n  // if (!this.state.movies.length && !this.state.error) {\n  //   return(\n  //     <p className='loading'>Loading...üçø</p>\n  //   )\n  // }\n\n}\n\nMovies.propTypes = {\n    movieCards: PropTypes.array,\n    splitDate: PropTypes.string,\n    newDate: PropTypes.string,\n  }\n\n  export default Movies;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport { getMovieInfo, getMovieTrailer } from '../../apiCalls'\nimport './MovieDetails.css'\n\nclass MovieDetails extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n          movieInfo: {},\n          movieTrailers: [],\n          movieError: '',\n          videoError: '',\n      }\n  }\n\n  componentDidMount() {\n    const { id } = this.props\n\n    getMovieInfo(id)\n        .then(movie => this.setState({ movieInfo: movie.movie }))\n        .catch(() => this.setState({ movieError: 'Having trouble finding movie information right now...please try again.'} ));\n\n    getMovieTrailer(id)\n        .then(video => {this.setState({ movieTrailers: video.videos.find(video => video.type === \"Trailer\") })})\n        .catch(() => this.setState({ videoError: 'Sorry, this video is currently unavailable.'}))\n  }\n\n  formatDate(date) {\n    const splitDate = date.split('-');\n    const newDate = splitDate[1] + '-' + splitDate[2] + '-' + splitDate[0];\n    return newDate;\n  }\n\n  convertNumber(number) {\n   return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n }\n\n  render() {\n    const {title, release_date, backdrop_path, genres,\n      budget, revenue, tagline, average_rating, runtime} = this.state.movieInfo;\n\n    if (title) {\n      const allGenres = genres.map(genre => genre + ' ');\n      const videoLink = this.state.movieTrailers && `https://www.youtube.com/embed/${this.state.movieTrailers.key}`\n      const backDrop = this.state.movieInfo && `url(${backdrop_path})`\n      return (\n        <section className='movie-details' style={{ backgroundImage: backDrop }}>\n          <article className='movie-details-info'>\n            <h2>{title.toUpperCase()}</h2>\n            <h3 style={{display: !tagline && \"none\"}}>{tagline}</h3>\n            <p className='details'>Avg Rating: {average_rating.toFixed(1)}</p>\n            <p className='details'>Release Date: {this.formatDate(release_date)}</p>\n            <p className='details'>Genre: {!allGenres.length ? \"Unavailable\" : allGenres}</p>\n            <p className='details'>Budget: {!budget ? \"Unavailable\" :`$${this.convertNumber(budget)}`}</p>\n            <p className='details'>Revenue: {!revenue ? \"Unavailable\" :`$${this.convertNumber(revenue)}`}</p>\n            <p className='details'>Runtime: {runtime ? runtime + \" minutes\" : \"Unavailable\"}</p>\n            <div className='trailer-video'>\n              <iframe\n              style={{display: !videoLink && \"none\"}}\n              title='Embedded youtube'\n              className='video'\n              width='450'\n              height='300'\n              src={videoLink}\n              frameBorder='0'\n              allowFullScreen\n              ></iframe>\n            </div>\n            <a href={videoLink} className=\"trailer-link hidden\">Click here for trailer</a>\n            <NavLink className='go-back' to=\"/\">Main View</NavLink>\n          </article>\n        </section>\n      )\n    }\n    return null\n  }\n}\n\n\nMovieDetails.propTypes = {\n   movieInfo: PropTypes.object,\n}\n\nexport default MovieDetails;\n","import React, { Component } from 'react';\nimport Movie from '../Movie/Movie';\nimport { getMovieData }  from '../../apiCalls';\nimport { NavLink } from 'react-router-dom';\nimport './FilteredMovies.css'\n\nclass FilteredMovies extends Component {\n  constructor() {\n    super()\n    this.state = {\n      movies: [],\n      movieInfo: null,\n      video: null,\n      filteredMovies: [],\n      error: ''\n    }\n  }\n\n  componentDidMount = () => {\n    getMovieData()\n    .then(data => this.setState({ movies: data.movies }))\n    .then(() => this.searchMovie())\n    .catch(err => this.setState({error: err}))\n  }\n\n  renderFilteredMovies = () => {\n    const searchedMovies = this.state.filteredMovies.map(movie => {\n      const splitDate = movie.release_date.split('-')\n      const newDate = splitDate[1] + '-' + splitDate[2] + '-' + splitDate[0]\n        return (\n            <Movie\n                poster={movie.poster_path}\n                background={movie.backdrop_path}\n                title={movie.title}\n                avgRating={movie.average_rating.toFixed(1)}\n                releaseDate={newDate}\n                id={movie.id}\n                key={movie.id}\n            />\n        )\n    })\n    return (\n        <div className='movies-container'>\n          {searchedMovies}\n          <NavLink className='go-back' to=\"/\">Main View</NavLink>\n        </div>\n      )\n  }\n\n  searchMovie = () => {\n  const searchedMov = this.state.movies.filter(movie => movie.title.toLowerCase().includes(this.props.title.toLowerCase()))\n  this.setState({ filteredMovies: searchedMov})\n  }\n\n  render() {\n    const searchedMovies = this.state.filteredMovies.map(movie => {\n      const splitDate = movie.release_date.split('-')\n      const newDate = splitDate[1] + '-' + splitDate[2] + '-' + splitDate[0]\n        return (\n            <Movie\n                poster={movie.poster_path}\n                background={movie.backdrop_path}\n                title={movie.title}\n                avgRating={movie.average_rating.toFixed(1)}\n                releaseDate={newDate}\n                id={movie.id}\n                key={movie.id}\n            />\n        )\n    })\n    return (\n      <section>\n          <NavLink className='go-back' to=\"/\">Main View</NavLink>\n            <div className='filtered-movies-container'>\n          {searchedMovies}\n        </div>\n      </section>\n      )\n  }\n}\n\nexport default FilteredMovies;\n","import React from 'react'\nimport './Header.css'\n\n\nconst Header = () => {\n  return (\n      <header className=\"header\">\n        <h1>rancid tomatillos üé¨</h1>\n      </header>\n    );\n  }\n\nexport default Header\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './Error.css'\n\nconst Error = () => {\n    return (\n        <div className='error'>\n            <NavLink className='go-back' to='/'>\n                <img src=\"https://files.muzli.space/43e6e439756832db0ff5dd2b76ffef5c.jpeg\" alt=\"404-img\"/>\n            </NavLink>\n        </div>\n    )\n}\n\nexport default Error;\n","import './App.css';\nimport React from \"react\";\nimport { Route, Switch } from 'react-router-dom';\nimport Movies from '../Movies/Movies';\nimport MovieDetails from '../MovieDetails/MovieDetails';\nimport FilteredMovies from '../FilteredMovies/FilteredMovies';\nimport Header from '../Header/Header';\nimport Error from '../Error/Error';\n\nconst App = () => {\n  return (\n      <div className=\"app\">\n          <Header />\n          <main className=\"main-section\">\n            <Switch>\n              <Route exact path=\"/\" render={ () =>  <Movies />}/>\n              <Route exact path=\"/search/:title\" render={ ({ match }) => <FilteredMovies title={match.params.title}/>}/>\n              <Route exact path=\"/search/\" render={ () => <Movies />}/>\n              <Route exact path=\"/movie/:id\" render={({ match }) => <MovieDetails id={parseInt(match.params.id)} />}/>\n              <Route path=\"*\" render={() => <Error />}/>\n            </Switch>\n          </main>\n        </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<BrowserRouter> <App /> </BrowserRouter>, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}